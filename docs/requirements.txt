недостатки текущих решений
(в порядке убывания приоритетов)

 - логика жестко связана с управляющим кодом
 - логика разных сервисов связана друг с другом прямыми вызовами
 - при разделении на микросервисы нет существующего механизма
    для связи их между собой и для создания новых сервисов, использующих существующие
 - в каждом случае SC-like система реализована своим кастомным способом

 - невозможно настроить hardcoded логику без изменения кода и перевыкладки
 - нет визуализации hardcoded SC


плюсы текущих решений

 + всё работает в монолите, не требует доп. настройки и обслуживания
 + нет ограничений на формат хранения состояния в микросервисах и формат взаимодействия
 + текущее решение хорошо подходит для синхронного REST API


предложения

 * описывать SC в формализованном виде
    - hardcoded (QT-like)
    - scxml
    - DB
    - должна быть возможность загрузить SC из одного формата и сохранить в любой другой SC формат
 * четко описывать состав контекста SC
 * сделать event-driven движок для  процессинга SC
    - процессинг SC = переход по состояниям как реакция на сообщения, отправка сообщений, запуск activity
    -



результаты



проверка по SOLID